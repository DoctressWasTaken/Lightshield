version: '3.7'
services:

  proxy:
    hostname: proxy
    image: doctress/spiritmight:dev
    environment:
      - ENVIRONMENT=riot_api_proxy
      - EXTRA_LENGTH=1.5
      - DEBUG=False
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_KEY=${API_KEY}
      - INTERNAL_DELAY=2
    ports:
      - "127.0.0.1:8888:8888"
    depends_on:
      - redis
  rabbitmq:
    hostname: rabbitmq
    image: docker.io/bitnami/rabbitmq:3.10
    ports:
      - '127.0.0.1:4369:4369'
      - '127.0.0.1:5551:5551'
      - '127.0.0.1:5552:5552'
      - '127.0.0.1:5672:5672'
      - '127.0.0.1:25672:25672'
      - '127.0.0.1:15672:15672'
    environment:
      - RABBITMQ_LOGS=-
    volumes:
      - 'rabbitmq_data:/bitnami/rabbitmq/mnesia'


  redis:
    hostname: redis
    image: redis:7.0-rc
    restart: always

  league_ranking:
    hostname: league_ranking
    build:
      dockerfile: Service_Dockerfile
      context: .
      args:
        service: league_ranking
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./config_in_docker.yaml:/project/config.yaml:ro
    entrypoint: "poetry run lightshield run league_ranking"
    restart: always

  puuid_collector:
    hostname: puuid_collector
    build:
      dockerfile: Service_Dockerfile
      context: .
      args:
        service: puuid_collector
    volumes:
      - ./config_in_docker.yaml:/project/config.yaml:ro
    entrypoint: "poetry run lightshield run puuid_collector"
    restart: always

  puuid_collector_rabbitmq:
    hostname: puuid_collector
    build:
      dockerfile: Service_Dockerfile
      context: .
      args:
        service: puuid_collector
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./config_in_docker.yaml:/project/config.yaml:ro
    entrypoint: "poetry run lightshield run puuid_collector.rabbitmq"
    restart: always

  match_history:
    hostname: match_history
    build:
      dockerfile: Service_Dockerfile
      context: .
      args:
        service: match_history
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./config_in_docker.yaml:/project/config.yaml:ro
    entrypoint: "poetry run lightshield run match_history"
    restart: always

  match_details:
    hostname: match_details
    build:
      dockerfile: Service_Dockerfile
      context: .
      args:
        service: match_details
    entrypoint: "poetry run lightshield run match_details"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./config_in_docker.yaml:/project/config.yaml:ro
      - type: bind
        source: ./data
        target: /data
    restart: always

volumes:
  rabbitmq_data:
    driver: local

networks:
  default:
    name: lightshield
    external: true
