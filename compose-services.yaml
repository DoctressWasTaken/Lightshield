version: '2.3'
services:

  proxy:
    build:
      dockerfile: Dockerfile
      context: services/proxy
    container_name: ${COMPOSE_PROJECT_NAME}_proxy
    environment:
      - SERVER=${SERVER}
    env_file:
      - secrets.env
    restart: always
    volumes:
        - ./logs/:/project/logs/

  league_updater:
    mem_limit: 500m
    cpus: 0.25
    build:
      dockerfile: Dockerfile
      context: services/league_updater
    container_name: ${COMPOSE_PROJECT_NAME}_league_updater
    environment:
      - SERVER=${SERVER}
      - UPDATE_INTERVAL=${UPDATE_INTERVAL}
      - BUFFER=${LEAGUE_BUFFER}
    external_links:
      - lightshield_rabbitmq:rabbitmq
    links:
      - proxy:proxy
      - redis_league:redis
    restart: always

  redis_league:
    mem_limit: 160m
    cpus: 0.25
    build:
      context: databases/redis
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_redis_league
    volumes:
      - redis_league:/data/
    restart: always

  summoner_id_updater:
    mem_limit: 500m
    cpus: 0.25
    build:
      dockerfile: Dockerfile
      context: services/summoner_id_updater
    container_name: ${COMPOSE_PROJECT_NAME}_summoner_id_updater
    environment:
      - SERVER=${SERVER}
      - BUFFER=${SUMMONER_ID_BUFFER}
    links:
      - redis_summoner_id:redis
      - proxy:proxy
    external_links:
      - lightshield_rabbitmq:rabbitmq
    depends_on:
      - redis_summoner_id
    restart: always

  redis_summoner_id:
    mem_limit: 160m
    cpus: 0.25
    build:
      context: databases/redis
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_redis_summoner_id
    volumes:
        - redis_summoner_id:/data/
    restart: always

  match_history_updater:
    mem_limit: 500m
    cpus: 0.25
    build:
      dockerfile: Dockerfile
      context: services/match_history_updater
    container_name: ${COMPOSE_PROJECT_NAME}_match_history_updater
    environment:
      - SERVER=${SERVER}
      - BUFFER=${MATCH_HISTORY_BUFFER}
      - MATCHES_TO_UPDATE=${MATCHES_TO_UPDATE}
      - TIME_LIMIT=${TIME_LIMIT}
    links:
      - redis_match_history:redis
      - proxy:proxy
    external_links:
      - lightshield_rabbitmq:rabbitmq
    depends_on:
      - redis_match_history
    restart: always

  redis_match_history:
    mem_limit: 160m
    cpus: 0.25
    build:
      context: databases/redis
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_redis_match_history
    volumes:
        - redis_match_history:/data/
    restart: always

  match_updater:
    mem_limit: 500m
    cpus: 0.25
    build:
      dockerfile: Dockerfile
      context: services/match_updater
    container_name: ${COMPOSE_PROJECT_NAME}_match_updater
    environment:
      - SERVER=${SERVER}
      - BUFFER=${MATCH_BUFFER}
    links:
      - redis_match:redis
      - proxy:proxy
    external_links:
      - lightshield_rabbitmq:rabbitmq
    depends_on:
      - redis_match
    restart: always

  redis_match:
    mem_limit: 160m
    cpus: 0.25
    build:
      context: databases/redis
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_redis_match
    volumes:
        - redis_match:/data/
    restart: always

  db_worker:
    mem_limit: 250m
    cpus: 0.25
    build:
      dockerfile: Dockerfile
      context: services/db_worker/
    container_name: ${COMPOSE_PROJECT_NAME}_db_worker
    environment:
      - SERVER=${SERVER}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
    external_links:
      - lightshield_postgres:postres
      - lightshield_rabbitmq:rabbitmq
    restart: always

volumes:
  redis_league:
    name: ${SERVER}_redis_league
  redis_summoner_id:
    name: ${SERVER}_redis_summoner_id
  redis_match_history:
    name: ${SERVER}_redis_match_history
  redis_match:
    name: ${SERVER}_redis_match

networks:
  default:
    external:
      name: riot_api
