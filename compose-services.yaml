version: '3.7'
services:

  ## Drakebane
  drakebane_frontend:
    hostname: drakebane_frontend
    build:
      dockerfile: Dockerfile
      context: drakebane/frontend
    restart: always
    ports:
      - 127.0.0.1:8301:80

  drakebane_backend:
    hostname: drakebane_backend
    build:
      dockerfile: Dockerfile
      context: drakebane/backend
    restart: always
    volumes:
      - drakebane_settings:/project/configs/
    ports:
      - 127.0.0.1:8302:8302
    depends_on:
      - redis

  ### Storage
  redis:
    hostname: redis
    build:
      dockerfile: Dockerfile
      context: redis
    restart: always
    volumes:
      - redis_data:/data

  postgres:
    hostname: postgres
    build:
      dockerfile: Dockerfile
      context: postgres
    restart: always
    ports:
      - 127.0.0.1:8303:5432
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  ### Services
  league_ranking:
    hostname: league_ranking
    build:
      dockerfile: Dockerfile
      context: services/league_ranking
    image: lightshield/league_ranking:${TAG}
    restart: always


  summoner_id:
    hostname: summoner_id
    build:
      dockerfile: Dockerfile
      context: services/summoner_id
    restart: always

  match_history:
    hostname: match_history
    build:
      dockerfile: Dockerfile
      context: services/match_history

  match_details:
    hostname: match_details
    build:
      dockerfile: Dockerfile
      context: services/match_details
    volumes:
      - ./data:/data/
    restart: always

x-disabled:

  match_details_manager:
    hostname: match_details_manager
    build:
      dockerfile: Dockerfile
      context: services/match_details/manager
      args:
        TAG: ${TAG}
    image: lightshield/match_details_manager:${TAG}
    environment:
      - SERVER=${SERVER}
    env_file:
      - secrets.env


  match_timeline_manager:
    hostname: match_timeline_manager
    build:
      dockerfile: Dockerfile
      context: services/match_timeline/manager
      args:
        TAG: ${TAG}
    image: lightshield/match_timeline_manager:${TAG}
    environment:
      - SERVER=${SERVER}
    env_file:
      - secrets.env

  match_timeline:
    hostname: match_timeline
    build:
      dockerfile: Dockerfile
      context: services/match_timeline/worker
      args:
        TAG: ${TAG}
    image: lightshield/match_timeline:${TAG}
    environment:
      - SERVER=${SERVER}
    restart: always
    env_file:
      - secrets.env


volumes:
  drakebane_settings:
  postgres_data:
  redis_data:

networks:
  default:
    name: lightshield
