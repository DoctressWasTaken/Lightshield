version: '3.7'
services:

  ### Drakebane
  drakebane_frontend:
    hostname: drakebane_frontend
    build:
      dockerfile: Dockerfile
      context: drakebane/frontend
    image: lightshield/drakebane_frontend:${TAG}
    restart: always
    ports:
      - 127.0.0.1:8301:80

  drakebane_backend:
    hostname: drakebane_backend
    build:
      dockerfile: Dockerfile
      context: drakebane/backend
    image: lightshield/drakebane_backend:${TAG}
    restart: always
    volumes:
      - drakebane_settings:/project/configs/
    ports:
      - 127.0.0.1:8302:8302
    depends_on:
      - redis

  ### Storage
  redis:
    hostname: redis
    build:
      dockerfile: Dockerfile
      context: redis
    image: lightshield/redis:${TAG}
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - 127.0.0.1:6379:6379

  postgres:
    hostname: postgres
    build:
      dockerfile: Dockerfile
      context: postgres
    image: lightshield/postgres:${TAG}
    restart: always
    ports:
      - 127.0.0.1:8303:5432
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    stop_grace_period: 60s


  ### Services
  league_ranking:
    hostname: league_ranking
    build:
      dockerfile: Dockerfile
      context: services/league_ranking
    image: lightshield/league_ranking:${TAG}
    restart: always

  summoner_id:
    hostname: summoner_id
    build:
      dockerfile: Dockerfile
      context: services/summoner_id
    image: lightshield/summoner_id:${TAG}
    restart: always

  summoner_activity_update:
    hostname: summoner_activity_update
    build:
      dockerfile: Dockerfile
      context: services/summoner_activity_update
    restart: always
    environment:
      - ACTIVITY_CHECK_AFTER=2


  summoner_server_update:
    hostname: summoner_server_update
    build:
      dockerfile: Dockerfile
      context: services/summoner_server_update
    restart: always
    environment:
      - SERVER_CHECK_AFTER=10


  match_history:
    hostname: match_history
    build:
      dockerfile: Dockerfile
      context: services/match_history

  match_details:
    hostname: match_details
    build:
      dockerfile: Dockerfile
      context: services/match_details
    image: lightshield/match_details:${TAG}
    volumes:
      - type: bind
        source: ./match_data
        target: /data
    restart: always

  match_timeline:
    hostname: match_timeline
    build:
      dockerfile: Dockerfile
      context: services/match_timeline
    image: lightshield/match_timeline:${TAG}
    volumes:
      - type: bind
        source: ./match_data
        target: /project/data
    restart: always

  ### Glue -- Tiny service to do some linking between data
  glue:
    hostname: glue
    build:
      dockerfile: Dockerfile
      context: services/glue
    image: lightshield/glue:${TAG}
    restart: always

volumes:
  drakebane_settings:
  postgres_data:
  redis_data:

networks:
  default:
    name: lightshield
