version: '3.7'
services:
  ### Services

  base_image:
    build:
      dockerfile: Dockerfile
      context: services/base
    image: lightshield/base_image:${TAG}
    entrypoint: [ 'ls' ]

  league_ranking:
    hostname: league_ranking
    build:
      dockerfile: Dockerfile
      context: services/league_ranking/standalone
      args:
        TAG: ${TAG}
    image: lightshield/league_ranking:${TAG}
    environment:
      - SERVER=${SERVER}
      - DEBUG=${DEBUG}
    env_file:
      - secrets.env
    restart: always
    volumes:
      - ranking_progress:/project/configs/

  summoner_id_manager:
    hostname: summoner_id
    build:
      dockerfile: Dockerfile
      context: services/summoner_id/manager
      args:
        TAG: ${TAG}
    image: lightshield/summoner_id_manager:${TAG}
    environment:
      - SERVER=${SERVER}
    env_file:
      - secrets.env

  summoner_id:
    hostname: summoner_id
    build:
      dockerfile: Dockerfile
      context: services/summoner_id/worker
      args:
        TAG: ${TAG}
    image: lightshield/summoner_id:${TAG}
    environment:
      - SERVER=${SERVER}
    env_file:
      - secrets.env
    restart: always

  match_history_manager:
    hostname: match_history
    environment:
      - SERVER=${SERVER}
    build:
      dockerfile: Dockerfile
      context: services/match_history/manager
      args:
        TAG: ${TAG}
    image: lightshield/match_history_manager:${TAG}
    env_file:
      - secrets.env

  match_history:
    hostname: match_history
    build:
      dockerfile: Dockerfile
      context: services/match_history/worker
      args:
        TAG: ${TAG}
    image: lightshield/match_history:${TAG}
    environment:
      - SERVER=${SERVER}
      - QUEUES=420
    restart: always
    env_file:
      - secrets.env

  match_details_manager:
    hostname: match_details_manager
    build:
      dockerfile: Dockerfile
      context: services/match_details/manager
      args:
        TAG: ${TAG}
    image: lightshield/match_details_manager:${TAG}
    environment:
      - SERVER=${SERVER}
    env_file:
      - secrets.env

  match_details:
    hostname: match_details
    build:
      dockerfile: Dockerfile
      context: services/match_details/worker
      args:
        TAG: ${TAG}
    image: lightshield/match_details:${TAG}
    environment:
      - SERVER=${SERVER}
    restart: always
    env_file:
      - secrets.env

  match_timeline_manager:
    hostname: match_timeline_manager
    build:
      dockerfile: Dockerfile
      context: services/match_timeline/manager
      args:
        TAG: ${TAG}
    image: lightshield/match_timeline_manager:${TAG}
    environment:
      - SERVER=${SERVER}
    env_file:
      - secrets.env

  match_timeline:
    hostname: match_timeline
    build:
      dockerfile: Dockerfile
      context: services/match_timeline/worker
      args:
        TAG: ${TAG}
    image: lightshield/match_timeline:${TAG}
    environment:
      - SERVER=${SERVER}
    restart: always
    env_file:
      - secrets.env

  roleml_standalone:
    hostname: roleml_standalone
    build:
      dockerfile: Dockerfile
      context: services/roleML/standalone
      args:
        TAG: ${TAG}
    image: lightshield/roleml_standalone:${TAG}
    environment:
      - BATCH_SIZE=2000
      - SERVER=${SERVER}
    env_file:
      - secrets.env


volumes:
  ranking_progress:
    name: ${SERVER}_ranking_progress

networks:
  default:
    external:
      name: lightshield
