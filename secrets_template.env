API_KEY=
# All other required variables are located in .env

# Debug
# DEBUG=False

# Number of async workers that most services employ
# WORKER=5

# Redis server location
# REDIS_HOST=localhost
# REDIS_PORT=6379

# Proxy Sync Redis (If differs from default Redis)
# PROXY_SYNC_HOST=$REDIS_HOST
# PROXY_SYNC_PORT=$REDIS_PORT

# Persistent Postgres DB
# PERSISTENT_HOST=localhost
# PERSISTENT_PORT=5432
# PERSISTENT_DATABASE=postgres
# PERSISTENT_USER=postgres
# PERSISTENT_PASSWORD=

# Manager max queue sizes
# Increase if the worker run out of tasks too quickly
# QUEUE_LIMIT=5000

# Worker Task reservation duration in minutes
# RESERVE_MINUTES=2

#  ##### League Ranking
# Minimum duration before the next cycle starts in hours
# !The duration starts at the same time the cycle starts not after its done!
# LEAGUE_UPDATE=1

#  ##### Match History
# Minimum time in hours after which a user will be queued to be updated again.
# AGE_THRESH=48  # TODO: Add support (See #22)
# Minimum new matches (ranked only) after which a user will be queued to be updated again.
# Decrease for more frequent more inefficient updates, increase otherwise
# MATCHES_THRESH=10
# Queues to be filtered for in query and response
# QUEUES=  # TODO: Might stop working with match-v5

#  ##### Match Timeline/Details
# Individual matches to be processed and inserted at once into the db.
# Higher levels will increase RAM usage of the services.
# BATCH_SIZE=30
# How far back data should be pulled
# This should either be a timestamp (in seconds)/date or a relative delay value appropriated for postgres
# MAX_AGE="CURRENT_DATE - 45"
